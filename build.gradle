/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
   
}

//Configure a project to publish Javadoc and sources
java {
    withJavadocJar()
    withSourcesJar()
}

//This is needed to generate an output jar file
jar {
    manifest {
        attributes(
                'Main-Class': 'Main'
        )
    }
}

dependencies {
    //JAVA===========================================
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    //JUNIT==========================================
    testImplementation 'junit:junit:4.13'
    //MYSQL==========================================
    //Tells computer what folder to check for mySQL API
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //Name of the jar that locally holds the API for Java-mySQL connction.
    compile files('mysql-connector-java-8.0.25.jar')
    //JSON-Simple====================================
    //grabs JSON-Simple remotely
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

application {
    // Define the main class for the application.
    mainClassName = 'Main'
}
